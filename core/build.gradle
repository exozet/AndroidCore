ext {
    versionName = VERSION_NAME
    VERSION_CODE = 1
    VSC = VSC_PATH
    isCi = true
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.dcendents.android-maven'

android {


    compileSdkVersion compileSdkVer
    buildToolsVersion buildToolsVer

    defaultConfig {
        minSdkVersion minSdkVer
        targetSdkVersion targetSdkVer
        versionCode isCi ? commitCount() : VERSION_CODE
        versionName isCi ? simpleReleaseVersionName() : VERSION_NAME
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        buildConfigField "String", "SIMPLE_VERSION_NAME", escape(simpleReleaseVersionName())
        buildConfigField "String", "CANONICAL_VERSION_NAME", escape(canonicalReleaseVersionName())
        buildConfigField "String", "COMMIT_HASH", escape(commitHash())
        buildConfigField "String", "BRANCH", escape(branchNameByGit())
        buildConfigField "String", "BUILD_DATE", escape(new Date().getTime())

        // to avoid lib compile for release when app is compiled for debug: //http://stackoverflow.com/a/30134955/2736039
        defaultPublishConfig 'release'
        publishNonDefault true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // region compile options

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    // endregion

    // region lint options

    lintOptions {
        disable 'InvalidPackage'
        abortOnError false        // true by default
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true       // false by default
        quiet true                // false by default
        tasks.lint.enabled = false
    }

    // endregion

    // region dex options

    dexOptions {
        javaMaxHeapSize "4g"
        maxProcessCount 8
    }

    // endregion

    // region adb options

    adbOptions {
        timeOutInMs 10 * 60 * 1000 // 10 minutes
    }

    // endregion

    // region exclude duplicated meta inf files

    packagingOptions {
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/app_debug.kotlin_module'
    }

    // endregion
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation libs.kotlinJdk8

    implementation libs.supportMultidex
    implementation libs.supportAppCompat
    implementation libs.constraintLayout
    implementation libs.supportCardView

    implementation libs.rx2java
    implementation libs.rx2Android

    implementation libs.retrofitAdapterRxJava2
    implementation libs.retrofit

    implementation libs.deviceInfo

    compileOnly libs.connectionBuddy
    compileOnly libs.googlePlayForceUpdate
    compileOnly libs.permissionDispatcher
    compileOnly libs.timeBomb

    implementation libs.supportRecyclerview
    implementation libs.recyclerViewPresenter

    implementation(libs.crashlytics) {
        transitive = true
    }

    implementation(libs.materialdrawer) {
        transitive = true
    }

    implementation libs.joda

    implementation libs.markdownview

    implementation libs.rxmarkdown

    implementation libs.processPhoenix

    implementation libs.logger

    compileOnly libs.playServicesAuth
    compileOnly libs.firebaseDatabase
    compileOnly libs.firebaseMessaging
    compileOnly libs.firebaseJobdispatcher
    compileOnly libs.apacheCommonsIo

    implementation libs.lifecycleExtensions
    implementation libs.lifecycleViewmodel
    implementation libs.lifecycleLivedata
    implementation libs.lifecycleRactiveStream
    kapt libs.lifecycleCompiler

    implementation libs.parceler
    implementation libs.okhttp3

    compileOnly libs.realmExtensions
    implementation libs.gson

    implementation libs.secureStorage
}

// region override support library version

configurations.all {

    resolutionStrategy.cacheDynamicVersionsFor 10, 'minutes'

    resolutionStrategy.force libs.supportMultidex
    resolutionStrategy.force libs.supportCompat
    resolutionStrategy.force libs.supportMediaCompat
    resolutionStrategy.force libs.supportFragment
    resolutionStrategy.force libs.supportAppCompat
    resolutionStrategy.force libs.supportCardView
    resolutionStrategy.force libs.supportGridLayout
    resolutionStrategy.force libs.supportMediaRouter
    resolutionStrategy.force libs.supportPalette
    resolutionStrategy.force libs.supportRecyclerview
    resolutionStrategy.force libs.supportPreferenceV7
    resolutionStrategy.force libs.supportPreferenceV14
    resolutionStrategy.force libs.supportV13
    resolutionStrategy.force libs.supportV4
    resolutionStrategy.force libs.supportPreferenceLeanback
    resolutionStrategy.force libs.supportLeanback
    resolutionStrategy.force libs.supportVectorDrawable
    resolutionStrategy.force libs.supportAnimatedVectorDrawable
    resolutionStrategy.force libs.supportAnnotations
    resolutionStrategy.force libs.supportDesign
    resolutionStrategy.force libs.supportCustomTabs
    resolutionStrategy.force libs.supportPercent
    resolutionStrategy.force libs.supportExifInterface
    resolutionStrategy.force libs.supportRecommendation
    resolutionStrategy.force libs.supportWear
    resolutionStrategy.force libs.constraintLayoutSolver
    resolutionStrategy.force libs.constraintLayout

    resolutionStrategy.force libs.lifecycleRuntime

    resolutionStrategy.force libs.playServicesPlus
    resolutionStrategy.force libs.playServicesAuth
    resolutionStrategy.force libs.playServicesBase
    resolutionStrategy.force libs.playServicesIdentity
    resolutionStrategy.force libs.playServicesAnalytics
    resolutionStrategy.force libs.playServicesAwareness
    resolutionStrategy.force libs.playServicesCast
    resolutionStrategy.force libs.playServicesGcm
    resolutionStrategy.force libs.playServicesDrive
    resolutionStrategy.force libs.playServicesFitness
    resolutionStrategy.force libs.playServicesLocation
    resolutionStrategy.force libs.playServicesMaps
    resolutionStrategy.force libs.playServicesAds
    resolutionStrategy.force libs.playServicesPlaces
    resolutionStrategy.force libs.playServicesVision
    resolutionStrategy.force libs.playServicesNearby
    resolutionStrategy.force libs.playServicesPanorama
    resolutionStrategy.force libs.playServicesGames
    resolutionStrategy.force libs.playServicesSafetynet
    resolutionStrategy.force libs.playServicesWallet
    resolutionStrategy.force libs.playServicesWearable

    resolutionStrategy.force libs.firebaseIid
    resolutionStrategy.force libs.firebaseCommon
    resolutionStrategy.force libs.firebaseCore
    resolutionStrategy.force libs.firebaseDatabase
    resolutionStrategy.force libs.firebaseFirestore
    resolutionStrategy.force libs.firebaseStorage
    resolutionStrategy.force libs.firebaseCrash
    resolutionStrategy.force libs.firebaseAuth
    resolutionStrategy.force libs.firebaseMessaging
    resolutionStrategy.force libs.firebaseConfig
    resolutionStrategy.force libs.firebaseInvites
    resolutionStrategy.force libs.firebaseAds
    resolutionStrategy.force libs.firebaseAppindexing
    resolutionStrategy.force libs.firebasePerf
    resolutionStrategy.force libs.firebaseFunctions
    resolutionStrategy.force libs.firebaseMlVision
    resolutionStrategy.force libs.firebaseMlModelInterpreter

    resolutionStrategy.force libs.butterknifeX
    resolutionStrategy.force libs.butterknifeCompilerX
    resolutionStrategy.force libs.guava
}

// endregion

static def escape(Object value) {
    return "\"$value\""
}

apply from: "${project.rootDir}/Android-Dependencies/javadoc.gradle"
apply from: "${project.rootDir}/Android-Dependencies/bintray.gradle"